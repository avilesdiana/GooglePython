-Slice is the portion of a string that can contain more than one character, also sometimes called a substring. 

-A method is a function associated with a specific class

- strip() remove surrounding whitespace from a string.
   .lstrip() = " sdf"
   .rstrip() = "sdf "

-.join() add a certain separator

-If you wanted to check if a string ends with a given substring, 
  you can use the method endswith. This will return True if the substring 
    is found at the end of the string, and False if not.

- For example, the expression {:>3.2f} 
would align the text three spaces to 
the right, as well as specify a float number with two decimal places. 

String Reference Cheat Sheet
String Reference Cheat Sheet

In Python, there are a lot of things you can do with strings. In this cheat sheet, youâ€™ll find the most common string operations and string methods.
String operations

    len(string) Returns the length of the string
    for character in string Iterates over each character in the string
    if substring in string Checks whether the substring is part of the string
    string[i] Accesses the character at index i of the string, starting at zero
    string[i:j] Accesses the substring starting at index i, ending at index j-1. If i is omitted, it's 0 by default. If j is omitted, it's len(string) by default.

String methods

    string.lower() / string.upper() Returns a copy of the string with all lower / upper case characters
    string.lstrip() / string.rstrip() / string.strip() Returns a copy of the string without left / right / left or right whitespace
    string.count(substring) Returns the number of times substring is present in the string
    string.isnumeric() Returns True if there are only numeric characters in the string. If not, returns False.
    string.isalpha() Returns True if there are only alphabetic characters in the string. If not, returns False.
    string.split() / string.split(delimiter) Returns a list of substrings that were separated by whitespace / delimiter
    string.replace(old, new) Returns a new string where all occurrences of old have been replaced by new.
    delimiter.join(list of strings) Returns a new string with all the strings joined by the delimiter 


documentation: https://docs.python.org/3/library/stdtypes.html#string-methods

format string syntax: https://docs.python.org/3/library/string.html#formatstrings

formating expressions: https://docs.python.org/3/library/string.html#format-specification-mini-language

old string formatting: https://docs.python.org/3/library/stdtypes.html#old-string-formatting

Formatted string literals : https://docs.python.org/3/reference/lexical_analysis.html#f-strings
